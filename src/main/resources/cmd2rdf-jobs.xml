<?xml version="1.0" encoding="UTF-8"?>
<!-- 
java -Xms1024m -Xmx2048m -jar MTCmd2Rdf.jar 
-i /data/cmdi2rdf/resultsets/results/cmdi 
-x /data/cmdi2rdf/svn-src/CMD2RDF/trunk/xsl/CMDRecord2RDF.xsl 
-o /data/cmdi2rdf/rdf-output-mt -c /data/cmdi2rdf/profile-cache 
-b http://localhost:8000/DAV &
-->

<CMD2RDF>
    <config version="1.0">
        <!-- some general config:
      - path to the harvested records
      - base-uri of the component registry
      - nr of threads
      - output directory
      - Virtuoso or even a general endpoint that supports the Graph Store HTTP protocol (http://www.w3.org/TR/sparql11-http-rdf-update/)
      - ...
    -->
        <homedir>/Users/akmi/Dropbox/DANS/IN_PROGRESS/CMDI2RDF-Workspace</homedir>
        <harvestedRecordDir>$homedir$/data/cmd-xml</harvestedRecordDir>
        <rdfOutputDir>/data/cmdi2rdf/rdf-output-mt</rdfOutputDir>
        <profileCacheLoc>/data/cmdi2rdf/profile-cache</profileCacheLoc>
        <xslDir>/Users/akmi/Dropbox/DANS/IN_PROGRESS/CMDI2RDF-Workspace/CMD2RDF-SVN/CMD2RDF/trunk/xsl</xslDir>
        <urlDB>/Users/akmi/eko-db-test/DB_CMD_CHECKSUM</urlDB>
        <virtuosoUrl>localhost:8000</virtuosoUrl>
        <virtuosoUser>dbaxxx</virtuosoUser>
        <virtuosoPass>dba</virtuosoPass>
    </config>
    <prepare>
        <actions>
            <action name="checksum">
                <class name="nl.knaw.dans.clarin.cmd2rdf.store.db.ChecksumDbMain" methodToExecute="checkDiff">
                    <properties>
                        <property name="xmlSrcPathDir">$harvestedRecordDir$</property>
                        <property name="urlDB">$urlDB$</property>
                    </properties>
                </class>
            </action>
            <action name="fetch">
                <class name="nl.knaw.dans.clarin.cmd2rdf.harvester.OaipmhHarvester" methodToExecute="harvest">
                    <properties>
                        <property name="baseUrl">https://openskos.meertens.knaw.nl/oai-pmh</property>
                        <property name="outputFile">$homedir$/tmp/meertens-VLO-orgs.rdf</property>
                    </properties>
                </class>
            </action>
        </actions>
    </prepare>
    <records>
        <record filter="NEW, UPDATE">
            <actions>
                <action name="transform">
                    <class name="nl.knaw.dans.clarin.cmd2rdf.mt.MTConverter" methodToExecute="process">
                        <properties>
                            <property name="urlDB">$urlDB$</property>
                            <property name="xsltPath">$homedir$/CMD2RDF-SVN/CMD2RDF/trunk/xsl/CMDRecord2RDF.xsl</property>
                            <property name="rdfOutputDir">$homedir$/output</property>
                            <property name="baseURI">http://localhost:8888/DAV</property>
                            <property name="cacheBasePathDir">$homedir$/cache-profile</property>
                            <property name="registry">http://catalog.clarin.eu/ds/ComponentRegistry/rest/registry/profiles/</property>
                            <property name="nThreads">10</property>
                        </properties>
                    </class>
                </action>
                <action>
                    <class name="nl.knaw.dans.clarin.cmd2rdf.Xslt" methodToExecute="transform">
                        <stylesheet href="addOrganisationEntity.xsl">
                            <with-param name="VLO-orgs" file="$homedir$/tmp/meertens-VLO-orgs.rdf"/>
                        </stylesheet>
                    </class>
                </action>
                <action>
                    <class name="nl.knaw.dans.clarin.cmd2rdf.mt.MTConverter" methodToExecute="storeRdf">
                        <properties>
                            <property name="virtuosoUrl">http://localhost:8000/sparql-graph-crud-auth?</property>
                            <property name="virtuosoUser">dba</property>
                            <property name="virtuosoPass">dba</property>
                        </properties>
                    </class>
                </action>
            </actions>
        </record>
        <record filter="NEW, UPDATE">
            <actions>
                <action>
                    <class name="nl.knaw.dans.clarin.cmd2rdf.HttpClient" methodToExecute="doDelete">
                        <!-- DELETE the Virtuoso named graph for removed CMDI records -->
                    </class>
                </action>
            </actions>
        </record>
    </records>
    
    <cleanup>
        <actions>
            <action>
                <class name="nl.knaw.dans.clarin.cmd2rdf.store.db.ChecksumDbDelete" methodToExecute="cleanup">
                    <properties>
                        <property name="dbname">DB_CMD_CHECKSUM</property>
                    </properties>
                </class>
            </action>
        </actions>
    </cleanup>
</CMD2RDF>